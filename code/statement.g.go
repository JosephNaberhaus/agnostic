// Code generated by tool/code_generator. DO NOT EDIT.

package code

type Block struct {
	Statements	[]Statement
	BlockMetadata
}

type Assignment struct {
	To	Value
	From	Value
	AssignmentMetadata
}

func (a *Assignment) isStatement()	{}

type If struct {
	Condition	Value
	Block		*Block
	IfMetadata
}

type ElseIf struct {
	Condition	Value
	Block		*Block
	ElseIfMetadata
}

type Else struct {
	Block	*Block
	ElseMetadata
}

type Conditional struct {
	If	*If
	ElseIfs	[]*ElseIf
	Else	*Else
	ConditionalMetadata
}

func (c *Conditional) isStatement()	{}

type Return struct {
	Value	Value
	ReturnMetadata
}

func (r *Return) isStatement()	{}

type Declare struct {
	Value	Value
	Name	string
	DeclareMetadata
}

func (d *Declare) isStatement()	{}

func (d *Declare) isDefinition()	{}

type For struct {
	Initialization	Statement
	Condition	Value
	AfterEach	Statement
	Block		*Block
	ForMetadata
}

func (f *For) isStatement()	{}

type ForIn struct {
	Iterable	Value
	ItemName	string
	Block		*Block
	ForInMetadata
}

func (f *ForIn) isStatement()	{}

func (f *ForIn) isDefinition()	{}

type AddToSet struct {
	To	Value
	Value	Value
	AddToSetMetadata
}

func (a *AddToSet) isStatement()	{}

type Push struct {
	To	Value
	Value	Value
	PushMetadata
}

func (p *Push) isStatement()	{}
